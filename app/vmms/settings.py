"""
Django settings for vmms project.

Generated by 'django-admin startproject' using Django 1.9.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

from pathlib import Path
import os
import subprocess
import ast
import logging


def get_environ_vars():
    completed_process = subprocess.run(
        ['/opt/elasticbeanstalk/bin/get-config', 'environment'],
        stdout=subprocess.PIPE,
        text=True,
        check=True
    )

    return ast.literal_eval(completed_process.stdout)



# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'warning.log'),
            'formatter': 'verbose',  # Use the 'verbose' formatter
        },
    },
    'loggers': {
        # Log all messages from your application
        '': {
            'handlers': ['file'],
            'level': 'WARNING',
            'propagate': True,
        },
    },
    'formatters': {
        'verbose': {
            # Output the date, level name (error level), message, and pathname (which includes the route of the API)
            'format': '[%(asctime)s] [%(levelname)s] [%(message)s]',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
}
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9g(fn=32syu7y#p$30u4*rwx$+_56or(*tta!6!u(681+ytt0n'

# SECURITY WARNING: don't run with debug turned on in production!

# Are we in production?

PROD = 'PROD' in os.environ

if PROD:
    print('WE ARE IN PROD')
    DEBUG = False
else:
    print('WE ARE IN DEBUG')
    DEBUG = True

ALLOWED_HOSTS = ['*']
CSRF_TRUSTED_ORIGINS = ['https://*.vmms.network']
SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'
USE_X_FORWARDED_HOST = True

# AWS S3 configuration for uploading new player versions

if 'S3_ACCESSKEY' in os.environ:
    AWS_ACCESS_KEY_ID = os.environ['S3_ACCESSKEY']
    AWS_SECRET_ACCESS_KEY = os.environ['S3_SECRET_ACCESS_KEY']
    S3_BUCKET = os.environ['S3_BUCKET']
    S3_REGION = os.environ['S3_REGION']
else:
    env_vars = get_environ_vars()
    AWS_ACCESS_KEY_ID = env_vars('S3_ACCESSKEY')
    AWS_SECRET_ACCESS_KEY = env_vars['S3_SECRET_ACCESS_KEY']
    S3_BUCKET = env_vars['S3_BUCKET']
    S3_REGION = env_vars['S3_REGION']

# AWS_ACCESS_KEY_ID = os.environ['S3_ACCESSKEY']
# AWS_SECRET_ACCESS_KEY = os.environ['S3_SECRET_ACCESS_KEY']
# S3_BUCKET = os.environ['S3_BUCKET']
# S3_REGION = os.environ['S3_REGION']

# Application definition
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "corsheaders",
    'rest_framework',
    'django_filters',
    'rest_framework.authtoken',
    'vmms',
    'vmms_client',
    'vmms_management',
    'vmms_music',
]

MIDDLEWARE = [
    'django_hosts.middleware.HostsRequestMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'vmms.middleware.RefererHostMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django_hosts.middleware.HostsResponseMiddleware',
]

ROOT_URLCONF = 'vmms.urls'

# CORS configuration


# CORS_ORIGIN_WHITELIST = ()

if PROD:
    CORS_ORIGIN_WHITELIST = (
        'http://vmms-dev-2023-env.eba-wxuk2wxq.eu-central-1.elasticbeanstalk.com',
        'https://management.dev.vmms.network',
        'https://api.dev.vmms.network',
        'https://music.dev.vmms.network',
        'https://client.dev.vmms.network',
        'https://preview.player.dev.vmms.network',
    )
else:
    CORS_ALLOWED_ORIGINS = (
        'http://management.vmms.local:8000',
        'http://api.vmms.local:8000',
        'http://music.vmms.local:8000',
        'http://client.vmms.local:8000',
        'http://player.preview.vmms.local:8080',
)

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_URLS_REGEX = '^.*$'

WSGI_APPLICATION = 'vmms.wsgi.application'

# django-hosts configuration

ROOT_HOSTCONF = 'vmms.hosts'
DEFAULT_HOST = 'management'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries': {
                'staticfiles': 'django.templatetags.static',
            }
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'vmms.authentication.CsrfExemptSessionAuthentication',
        'rest_framework.authentication.TokenAuthentication'
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
        'vmms.permissions.WhitelistedRefererRequired',
    ),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_RENDERER_CLASSES': ('rest_framework.renderers.JSONRenderer',)
}

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = dict()

DATABASES["default"] = {'ENGINE': 'django.db.backends.postgresql_psycopg2',
                        'NAME': os.environ['MAIN_RDS_DB_NAME'],
                        'USER': os.environ['MAIN_RDS_USERNAME'],
                        'PASSWORD': os.environ['MAIN_RDS_PASSWORD'],
                        'HOST': os.environ['MAIN_RDS_HOSTNAME'],
                        'PORT': os.environ['MAIN_RDS_PORT'],
                        }

DATABASES['import-tool'] = {
    'ENGINE': 'django.db.backends.mysql',
    'NAME': os.environ['IMPORT_RDS_DB_NAME'],
    'USER': os.environ['IMPORT_RDS_USERNAME'],
    'PASSWORD': os.environ['IMPORT_RDS_PASSWORD'],
    'HOST': os.environ['IMPORT_RDS_HOSTNAME'],
    'PORT': os.environ['IMPORT_RDS_PORT'],
}

DATABASES['promotion-tool'] = {
    'ENGINE': 'django.db.backends.mysql',
    'NAME': os.environ['PROMOTION_RDS_DB_NAME'],
    'USER': os.environ['PROMOTION_RDS_USERNAME'],
    'PASSWORD': os.environ['PROMOTION_RDS_PASSWORD'],
    'HOST': os.environ['PROMOTION_RDS_HOSTNAME'],
    'PORT': os.environ['PROMOTION_RDS_PORT'],
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = []

AUTH_USER_MODEL = 'vmms.User'

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

USE_I18N = True

USE_L10N = True

USE_TZ = True

TIME_ZONE = 'Etc/UTC'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "..", "www", "static")
